"use strict";(self.webpackChunkbaileys_wiki=self.webpackChunkbaileys_wiki||[]).push([[70752],{28453:(e,s,i)=>{i.d(s,{R:()=>d,x:()=>c});var n=i(96540);const t={},a=n.createContext(t);function d(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(a.Provider,{value:s},e.children)}},42196:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"api/type-aliases/MessageRelayOptions","title":"Type Alias: MessageRelayOptions","description":"MessageRelayOptions: MinimalRelayOptions & object","source":"@site/docs/api/type-aliases/MessageRelayOptions.md","sourceDirName":"api/type-aliases","slug":"/api/type-aliases/MessageRelayOptions","permalink":"/docs/api/type-aliases/MessageRelayOptions","draft":false,"unlisted":false,"editUrl":"https://github.com/WhiskeySockets/baileys.wiki-site/tree/main/docs/docs/api/type-aliases/MessageRelayOptions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"refSidebar","previous":{"title":"Type Alias: MessageReceiptType","permalink":"/docs/api/type-aliases/MessageReceiptType"},"next":{"title":"Type Alias: MessageType","permalink":"/docs/api/type-aliases/MessageType"}}');var t=i(74848),a=i(28453);const d={},c="Type Alias: MessageRelayOptions",l={},r=[{value:"Type declaration",id:"type-declaration",level:2},{value:"additionalAttributes?",id:"additionalattributes",level:3},{value:"Index Signature",id:"index-signature",level:4},{value:"additionalNodes?",id:"additionalnodes",level:3},{value:"participant?",id:"participant",level:3},{value:"participant.count",id:"participantcount",level:4},{value:"participant.jid",id:"participantjid",level:4},{value:"statusJidList?",id:"statusjidlist",level:3},{value:"useUserDevicesCache?",id:"useuserdevicescache",level:3}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"type-alias-messagerelayoptions",children:"Type Alias: MessageRelayOptions"})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"MessageRelayOptions"}),": ",(0,t.jsx)(s.code,{children:"MinimalRelayOptions"})," & ",(0,t.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/WhiskeySockets/Baileys/blob/44c5e16c05aab727d80d65af3f7179f0206c3ef0/src/Types/Message.ts#L240",children:"src/Types/Message.ts:240"})]}),"\n",(0,t.jsx)(s.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(s.h3,{id:"additionalattributes",children:"additionalAttributes?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"additionalAttributes"}),": ",(0,t.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"additional attributes to add to the WA binary node"}),"\n",(0,t.jsx)(s.h4,{id:"index-signature",children:"Index Signature"}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.code,{children:"_"}),": ",(0,t.jsx)(s.code,{children:"string"}),"]: ",(0,t.jsx)(s.code,{children:"string"})]}),"\n",(0,t.jsx)(s.h3,{id:"additionalnodes",children:"additionalNodes?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"additionalNodes"}),": ",(0,t.jsx)(s.a,{href:"/docs/api/type-aliases/BinaryNode",children:(0,t.jsx)(s.code,{children:"BinaryNode"})}),"[]"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"participant",children:"participant?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"participant"}),": ",(0,t.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"only send to a specific participant; used when a message decryption fails for a single user"}),"\n",(0,t.jsx)(s.h4,{id:"participantcount",children:"participant.count"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"count"}),": ",(0,t.jsx)(s.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"participantjid",children:"participant.jid"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"jid"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"statusjidlist",children:"statusJidList?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"statusJidList"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"jid list of participants for status@broadcast"}),"\n",(0,t.jsx)(s.h3,{id:"useuserdevicescache",children:"useUserDevicesCache?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"useUserDevicesCache"}),": ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:'should we use the devices cache, or fetch afresh from the server; default assumed to be "true"'})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);